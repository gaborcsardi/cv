% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cvSelect.R
\name{cvSelect}
\alias{cvSelect}
\alias{selectStepAIC}
\alias{compareFolds}
\title{Cross-Validate a Model-Selection Procedure}
\usage{
cvSelect(
  procedure,
  data,
  k = 10,
  reps = 1,
  save.coef = k <= 10,
  seed,
  ncores = 1,
  ...
)

selectStepAIC(
  data,
  indices,
  model,
  criterion = mse,
  k. = 2,
  save.coef = TRUE,
  ...
)

compareFolds(object, digits = 3, ...)
}
\arguments{
\item{procedure}{a model-selection procedure function (see Details).}

\item{data}{full data frame for model selection.}

\item{k}{perform k-fold cross-validation (default is 10); \code{k}
may be a number or \code{"loo"} or \code{"n"} for n-fold (leave-one-out)
cross-validation.}

\item{reps}{number of times to replicate k-fold CV (default is \code{1})}

\item{save.coef}{save the coefficients from the selected models? (default is \code{TRUE} if
\code{k} is 10 or smaller, \code{FALSE} otherwise)}

\item{seed}{for R's random number generator; not used for n-fold cross-validation.}

\item{ncores}{number of cores to use for parallel computations
(default is \code{1}, i.e., computations aren't done in parallel)}

\item{...}{arguments to be passed to \code{procedure()}.}

\item{indices}{indices of cases in data defining the current fold.}

\item{model}{a regression model object fit to data.}

\item{criterion}{a CV criterion function.}

\item{k.}{the \code{k} argument to \code{\link[MASS]{stepAIC}()} (note the period in \code{k.}).}

\item{object}{an object of class \code{"cvSelect"}.}

\item{digits}{significant digits for printing coefficients,
(default \code{3}).}
}
\value{
An object of class , inheriting from class \code{"cv"}, with the averaged CV criterion
(\code{"CV crit"}), the adjusted average CV criterion (\code{"adj CV crit"}),
the criterion for the model applied to the full data (\code{"full crit"}),
the number of folds (\code{"k"}), the seed for R's random-number
generator (\code{"seed"}), and (optionally) a list of coefficients for the selected models
for each fold (\code{"coefs"}).
#' If \code{reps} > \code{1}, then an object of class \code{c("cvSelectList", "cvList")} is returned,
which is literally a list of \code{c("cvSelect", "cv")} objects.
}
\description{
A generic function to cross-validate a model-selection procedure,
along with a procedure that applies the \code{\link[MASS]{stepAIC}()}
model-selection function in the \pkg{MASS} package.
}
\details{
The model-selection function supplied as the \code{procedure} argument
to \code{cvSelect()} should accept the following arguments:
\describe{
\item{\code{data}}{set to the \code{data} argument to \code{cvSelect()}.}
\item{\code{indices}}{the indices of the rows of \code{data} defining the current fold; if missing,
the model-selection procedure is applied to the full \code{data}.}
\item{other arguments}{to be passed via the \code{...}
to \code{cvSelect()}.}
}
\code{procedure()} should return a two-element vector with the result
of applying a cross-validation criterion to the cases in
the current fold for the model deleting that fold, and to
all of the cases again for the model deleting the current fold.

When the \code{indices} argument is missing, \code{procedure()} returns the cross-validation criterion for all of the cases based on
the model fit to all of the cases.

For an example of a model-selection function for the \code{procedure}
argument, see the code for \code{selectStepAIC()}.
}
\section{Functions}{
\itemize{
\item \code{cvSelect()}: apply cross-validation to a model-selection procedure.

\item \code{selectStepAIC()}: select a model using the \code{\link[MASS]{stepAIC}()} function in the
\pkg{MASS} package.

\item \code{compareFolds()}: print the coefficients from the selected models
for the several folds.

}}
\examples{
data("Auto", package="ISLR2")
m.auto <- lm(mpg ~ . - name - origin, data=Auto)
cvSelect(selectStepAIC, Auto, seed=123, model=m.auto)
cvSelect(selectStepAIC, Auto, seed=123, model=m.auto,
         k.=log(nrow(Auto)), k=5, reps=3) # via BIC
}
\seealso{
\code{\link[MASS]{stepAIC}()}
}
